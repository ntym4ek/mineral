<?php

/**
 * Implements hook_block_info().
 */
function ext_block_block_info()
{
  return [
    'custom-block-dumb' => [
      'info' => 'CB | Пустая заглушка для сайдборда',
    ],
    'custom-block-front-banner'  => [                     // по какой-то причине, если индекс содержит _ вместо - блок виден в базовой теме, но НЕ виден в подтеме.
      'info' => t('CB | Front Banner'),
    ],
    'custom-block-contacts'     => [
      'info' => t('CB | Contacts'),
    ],
    'custom-block-counters'     => [
      'info' => 'CB | Счётчики',
    ],
    'custom-block-about'        => [
      'info' => 'CB | О компании',
    ],
    'custom-block-products-series' => [
      'info' => 'CB | Линейки продуктов',
    ],
  ];
}

/**
 * Implements hook_block_view().
 */
function ext_block_block_view($delta = '')
{
  $block = [];

  // блоки с динамически формируемым содержимым
  if ($delta == 'custom-block-front-banner') {
    $block['content'] = theme($delta, ['slides' => ext_block_get_front_banner_slides()]);
  }
  elseif ($delta == 'custom-block-products-series') {
    if ($products = sec_catalog_get_all_products()) {
      $cards = [];
      foreach ($products as $node) {
        $node_wr = entity_metadata_wrapper('node', $node);
        $brand_id = $node_wr->field_item_brand->getIdentifier();
        $brand_w = $node_wr->field_item_brand->weight->value();
        if (!isset($cards[$brand_w])) {
          $cards[$brand_w] = [
            'label' => $node_wr->field_item_brand->label(),
            'products' => [],
            ];
        }
        $view = node_view($node, 'teaser');
        $rendered = drupal_render($view);
        $cards[$brand_w]['products'][] = $rendered;
        ksort($cards);
      }
      $block['content'] = theme($delta, ['cards' => $cards, 'title' => t('Products series')]);
    } else $block['content'] = null;
  }


  // блоки со статичной разметкой
  elseif (strpos($delta, 'custom-block-') === 0) {
    $block['content'] = theme($delta);
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function ext_block_theme()
{
  return [
    'custom-block-dumb'      => [
      'variables' => [],
      'template' => 'templates/block-dumb',
    ],
    'custom-block-front-banner'    => [
      'variables' => [],
      'template' => 'templates/block-front-banner',
    ],
    'custom-block-contacts'       => [
      'variables' => [],
      'template' => 'templates/block-contacts',
    ],
    'custom-block-counters'       => [
      'variables' => [],
      'template' => 'templates/block-counters',
    ],
    'custom-block-about'          => [
      'variables' => [],
      'template' => 'templates/block-about',
    ],
    'custom-block-products-series'          => [
      'variables' => [],
      'template' => 'templates/block-products-series',
    ],
  ];
}

function ext_block_get_front_banner_slides()
{
  $banners = [];
  if ($terms = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('slider_front_banners')->vid, 0, null, true)) {
    foreach($terms as $term) {
      $term_wr = entity_metadata_wrapper('taxonomy_term', $term);
      $banners[] = [
        'title' => $term_wr->label(),
        'description' => $term_wr->description->value(),
        'img' => file_create_url($term_wr->field_image->file->url->value()),
        'path' => url($term_wr->field_text->value()),
      ];
    }
  }

  return $banners;
}

/**
 * Implements hook_preprocess_block().
 */
function ext_block_preprocess_block(&$vars)
{
  if (empty($vars["content"])) {
    $vars["classes_array"][] = 'block-empty';
  }
}
